<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
  <display-name></display-name>	
  
  
	<!-- 配置Spring的用于初始化容器对象的监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext*.xml</param-value>
	</context-param>
  
  <!-- 用于做初始化工作的监听器，一定要配置到Spring的ContextLoaderListener之后，因为要用到Spring的容器对象 -->
  <listener>
  	<listener-class>cn.itcast.oa.util.InitListener</listener-class>
  </listener>
  
  <!-- spring的使用request参数时需要配置的监听 -->
  <listener>
  	<listener-class>
  		org.springframework.web.context.request.RequestContextListener
  	</listener-class>
  </listener>
  
  <!-- 配置Spring的用于解决懒加载问题的过滤器 -->
  <filter>
  	<filter-name>OpenSessionInViewFilter</filter-name>
  	<filter-class>
  		org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
  	</filter-class>
  	<!-- 配置openSessionInView时，启动后他默认是给没有配置事务边界的方法都默认为只读的，解决办法如下配置 -->
  	<init-param>
           <param-name>flushMode</param-name>   
           <param-value>AUTO</param-value>    
    </init-param>
  </filter>
  <filter-mapping>
  	<filter-name>OpenSessionInViewFilter</filter-name>
  	<url-pattern>*.action</url-pattern>
  </filter-mapping>
  
  <!-- 配置Struts2的核心的过滤器 -->
  <filter>
  	<filter-name>struts2</filter-name>
  	<filter-class>
  		org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
  	</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>struts2</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
</web-app>
